import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.security.InvalidKeyException;
import java.security.Key;
import java.security.NoSuchAlgorithmException;
import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.spec.SecretKeySpec;

public class test {

   static void cipher(int encrypt, String skey, File in, File out){
	 try {
	       Key key = new SecretKeySpec(skey.getBytes(), "AES");
	       Cipher cipher = Cipher.getInstance("AES");
	       cipher.init(encrypt, key);
	       FileInputStream inputStream = new FileInputStream(in);
	       byte[] inputBytes = new byte[(int) in.length()];
	       inputStream.read(inputBytes);
	       byte[] outputBytes = cipher.doFinal(inputBytes);
	       FileOutputStream outputStream = new FileOutputStream(out);
	       outputStream.write(outputBytes);
	       inputStream.close();
	       outputStream.close();

	    } 
	    catch (IOException ex)
	    {
	    throw new CryptoException("Error has occured. Please try again.", ex);
	    }
     }
}
	

public class CryptoException extends Exception {
 
    public CryptoException() {
    }
    public CryptoException(String message, Throwable throwable) {
        super(message, throwable);
    }
}





import javax.crypto.Cipher;

import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

import static org.junit.jupiter.api.Assertions.*;

class test_Test {
	@Test
	void fileProcessor_test() {
		String key = "12345";
		File in = new File("test.txt");
		File cipher = new File("text.encrypted");
		File decipher = new File("decrypted.txt");
	     test.cipher(Cipher.ENCRYPT_MODE,key,in,cipher);
	     test.cipher(Cipher.DECRYPT_MODE,key,cipher,decipher);
         }
}


