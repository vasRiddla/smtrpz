import com.google.gson.Gson;
import java.util.Random;

public class Person {
    static Random rand = new Random();
	static int age = rand.nextInt(100);
    static int Id;
    static String surname;
    Person(String name, int date)
    {
    	Id += 1;
        surname = name;
        age = date;
    }
    @Override
    public boolean equals(Object persona){
    
        if (persona == null)
        {
            return false;
        }
        else if (this == persona)
        {
            return true;
        }
        Person person = (Person) persona;
        return surname.equals(Person.surname);
    }
    @Override
    public int hashCode()
    {
        return surname.hashCode() + age;
    }
    public String ToJson()
    {
        Gson gson = new Gson();
        String json = gson.toJson(this); //інструментальні засоби Gson дозволяють перетворювати рядки JSON в об'єкти Java (розбір json) і перетворювати об'єкти Java в рядки JSON.
        return json;
    }
    public static Person FromJson(String json)
    {
        Gson gson = new Gson();
        Person Bob = gson.fromJson(json, Person.class);//Ця функція та її методи зчитують вміст у форматі JSON та де-серіалізують його на R-об’єкти.
        return Bob;
    }
}

import org.junit.Assert;
import org.junit.jupiter.api.Test;
import com.google.gson.Gson;

public class PersonTest {
	@Test
    	void personTest() {
        Person p1 = new Person("Bob", 25);
        Gson gson = new Gson();
        String json = gson.toJson(this);
        Person person = gson.fromJson(json, Person.class);
        Assert.assertEquals(p1, person);
    }
}
